(deftheme my-color)

(custom-theme-set-faces
 'my-color
 ;; TODO: company?
 '(compilation-mode-line-fail ((t (:weight bold :inherit error))))
 '(completions-common-part ((t (:foreground "#7C7C7C"))))
 '(completions-first-difference ((t (:foreground "yellow"))))
 '(cursor ((t (:foreground "white"))))
 '(default ((t (:background "black" :foreground "#f6f3e8"))))
 '(diff-added ((t (:foreground "dark green"))))
 '(diff-changed ((t (:foreground "blue3"))))
 '(diff-file-header ((t (:foreground "cyan"))))
 '(diff-header ((t (:foreground "dark cyan"))))
 '(diff-refine-added ((t (:foreground "green3"))))
 '(diff-refine-changed ((t (:foreground "blue3"))))
 '(diff-refine-removed ((t (:foreground "red3"))))
 '(diff-removed ((t (:foreground "dark red"))))
 '(error ((t (:foreground "#FF6C60"))))
 '(font-lock-builtin-face ((t (:foreground "#96CBFE"))))
 '(font-lock-comment-delimiter-face ((t (:inherit font-lock-comment-face))))
 '(font-lock-comment-face ((t (:foreground "#7C7C7C"))))
 '(font-lock-constant-face ((t (:foreground "#99CC99"))))
 '(font-lock-doc-face ((t (:foreground "#ffccff"))))
 '(font-lock-function-name-face ((t (:foreground "#FFD2A7"))))
 '(font-lock-keyword-face ((t (:foreground "#96CBFE"))))
 '(font-lock-preprocessor-face ((t (:foreground "#6699CC"))))
 '(font-lock-regexp-grouping-backslash ((t (:foreground "#B18A3D"))))
 '(font-lock-regexp-grouping-construct ((t (:foreground "#B18A3D"))))
 '(font-lock-string-face ((t (:foreground "#A8FF60"))))
 '(font-lock-type-face ((t (:foreground "#FFFFB6"))))
 '(font-lock-variable-name-face ((t (:foreground "#C6C5FE"))))
 '(font-lock-warning-face ((t (:foreground "#FF6C60"))))
 '(highlight ((t (:inherit 'lazy-highlight))))
 '(hl-line ((t (:background "#121212"))))
 '(isearch ((t (:background "#2F2F00" :foreground "white"))))
 '(lazy-highlight ((t (:background "#412b14" :foreground "white"))))
 '(mode-line ((t (:background "light gray" :foreground "blue4"))))
 '(mode-line-buffer-id ((t (:foreground "red4"))))
 '(mode-line-inactive ((t (:background "#a9a9a9" :foreground "blue4"))))
 '(region ((t :background "#262D51")))
 '(success ((t (:weight bold :foreground "#A8FF60"))))
 '(whitespace-space ((t (:foreground "#303030")))))

(provide-theme 'my-color)
;;; my-color-theme.el ends here
